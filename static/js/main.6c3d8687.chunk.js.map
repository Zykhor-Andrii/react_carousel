{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","maxWidth","length","stepSum","className","style","width","transform","transition","map","image","src","alt","onClick","setState","type","Component","App","htmlFor","defaultValue","id","min","onChange","even","target","value","max","event","currentTarget","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c3d8687.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\ntype State = {\n  position: number\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxWidth = (images.length - frameSize) * itemWidth;\n\n    const stepSum = step * itemWidth;\n\n    const nextImage = () => {\n      if (position - itemWidth * step < -maxWidth) {\n        this.setState({ position: -maxWidth });\n      } else {\n        this.setState({ position: position + -stepSum });\n      }\n\n      if (position === -maxWidth && infinite) {\n        this.setState({ position: 0 });\n      }\n    };\n\n    const prevImage = () => {\n      if (position + stepSum > 0) {\n        this.setState({ position: 0 });\n      } else {\n        this.setState({ position: position + stepSum });\n      }\n\n      if (position === 0 && infinite) {\n        this.setState({ position: -maxWidth });\n      }\n    };\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={\n          {\n            width: frameSize * itemWidth,\n          }\n        }\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${position}px)`,\n            transition: `transform ${animationDuration}ms `,\n          }}\n        >\n          {\n            images.map((image: string) => (\n              <li\n                className=\"Carousel__list-item\"\n                key={image}\n              >\n                <img\n                  style={{ width: itemWidth }}\n                  src={image}\n                  alt={image}\n                />\n              </li>\n            ))\n          }\n        </ul>\n\n        <button\n          onClick={prevImage}\n          type=\"button\"\n        >\n          Prev\n        </button>\n        <button\n          onClick={nextImage}\n          type=\"button\"\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          step={step}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"form\">\n\n          <label htmlFor=\"inputStep\" className=\"form__input\">\n            step\n            <input\n              className=\"form__input-item\"\n              type=\"number\"\n              defaultValue={step}\n              id=\"inputStep\"\n              min=\"1\"\n              onChange={(even) => {\n                this.setState({ step: +even.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"inputFrameSize\" className=\"form__input\">\n            frameSize\n            <input\n              className=\"form__input-item\"\n              type=\"number\"\n              defaultValue={frameSize}\n              id=\"inputFrameSize\"\n              min=\"1\"\n              max={images.length}\n              onChange={(even) => {\n                this.setState({ frameSize: +even.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"inputItemWidth\" className=\"form__input\">\n            itemWidth\n            <input\n              className=\"form__input-item\"\n              type=\"number\"\n              defaultValue={itemWidth}\n              step=\"10\"\n              id=\"inputItemWidth\"\n              min=\"1\"\n              onChange={(even) => {\n                this.setState({ itemWidth: +even.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"inputAnimationDuration\" className=\"form__input\">\n            animationDuration\n            <input\n              className=\"form__input-item\"\n              type=\"number\"\n              defaultValue={animationDuration}\n              step=\"500\"\n              id=\"inputAnimationDuration\"\n              min=\"0\"\n              onChange={(even) => {\n                this.setState({ animationDuration: +even.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"checkboxInfinite\" className=\"form__input\">\n            infinite\n            <input\n              id=\"checkboxInfinite\"\n              type=\"checkbox\"\n              onClick={(event) => {\n                this.setState({ infinite: event.currentTarget.checked });\n              }}\n            />\n          </label>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}